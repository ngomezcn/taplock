# Generated by Django 3.2.4 on 2021-07-18 06:31

import datetime
from django.db import migrations, models
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='-', max_length=32)),
                ('token', models.CharField(default='-', max_length=255)),
                ('creation', models.DateTimeField(default=datetime.datetime.now, max_length=255, verbose_name='Datetime creation')),
                ('valid', models.BooleanField(default=True, verbose_name='Token status')),
            ],
        ),
        migrations.CreateModel(
            name='iTap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner', models.EmailField(default='', max_length=32)),
                ('name', models.CharField(default='', max_length=32)),
                ('address', models.CharField(default='', max_length=32)),
                ('timestamp_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('slots', models.IntegerField(default=5)),
                ('uuid', models.CharField(default=uuid.UUID('8aaee69e-c80b-4e32-ad90-054f36b55402'), max_length=36)),
                ('activation_key', models.CharField(default='R6691X', max_length=8)),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='RecoverPasswordToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(default='-', max_length=32)),
                ('recover_code', models.CharField(default='-', max_length=255)),
                ('creation', models.DateTimeField(default=datetime.datetime.now, max_length=255, verbose_name='Datetime creation')),
                ('valid', models.BooleanField(default=True, verbose_name='Code status')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('terms_of_service', models.BooleanField(default=True)),
                ('email', models.EmailField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=32)),
                ('phone', models.CharField(default='null', max_length=9)),
                ('creation', models.DateTimeField(default=datetime.datetime.now)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('email_verification', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
